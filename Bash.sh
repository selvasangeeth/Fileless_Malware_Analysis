#!/bin/bash

# Navigate to the volatility directory
cd volatility

# Define the output file
output_file="/home/kali/volatility/output.txt"

# Define the parameters
parameters=(
    'pslist.nproc'
    'pslist.avg_threads'
    'pslist.avg_handlers'
    'dlllist.ndlls'
    'dlllist.avg_dlls_per_proc'
    'handles.nhandles'
    'handles.nfile'
    'handles.nevent'
    'handles.nthread'
    'modules.nmodules'
    'svcscan.nservices'
    'svcscan.kernel_drivers'
    'svcscan.process_services'
    'callbacks.ncallbacks'
)

# Loop through each parameter
for param in "${parameters[@]}"; do
    case "$param" in
        'pslist.nproc')
            value=$(python vol.py -f Challenge.raw windows.pslist.PsList | tail -n +5 | wc -l)
            ;;
        'pslist.avg_threads')
            value=$(python vol.py -f Challenge.raw windows.pslist.PsList | awk '{print $5}' | tail -n +5 | awk '{s+=$1} END {print s/NR}')
            ;;
        'pslist.avg_handlers')
            value=$(python vol.py -f Challenge.raw windows.pslist.PsList | awk '{print $6}' | tail -n +5 | awk '{s+=$1} END {print s/NR}')
            ;;
        'dlllist.ndlls')
            value=$(python vol.py -f Challenge.raw windows.dlllist.DllList | tail -n +5 | wc -l)
            ;;
        'dlllist.avg_dlls_per_proc')
            value=$(python vol.py -f Challenge.raw windows.dlllist.DllList | awk '{print $2}' | tail -n +5 | sort | uniq | wc -l)
            ;;
        'handles.nhandles')
            value=$(python vol.py -f Challenge.raw windows.handles.Handles | tail -n +5 | wc -l)
            ;;
        'handles.nfile')
            value=$(python vol.py -f Challenge.raw windows.handles.Handles | awk '{print $5}' | grep File | tail -n +5 | wc -l)
            ;;
        'handles.nevent')
            value=$(python vol.py -f Challenge.raw windows.handles.Handles | awk '{print $5}' | grep Event | tail -n +5 | wc -l)
            ;;
        'handles.nthread')
            value=$(python vol.py -f Challenge.raw windows.handles.Handles | awk '{print $5}' | grep Thread | tail -n +5 | wc -l)
            ;;
        'modules.nmodules')
            value=$(python vol.py -f Challenge.raw windows.modules | awk '{print $4}' | tail -n +5 | sort | uniq | wc -l)
            ;;
        'svcscan.nservices')
            value=$(python vol.py -f Challenge.raw windows.svcscan.SvcScan | awk '{print $7}' | tail -n +5 | sort | uniq | wc -l)
            ;;
        'svcscan.kernel_drivers')
            value=$(python vol.py -f Challenge.raw windows.svcscan.SvcScan | awk '$6 == "KERNEL_DRIVER"' | wc -l)
            ;;
        'svcscan.process_services')
            value=$(python vol.py -f Challenge.raw windows.svcscan.SvcScan | awk '$6 == "OWN_PROCESS"' | wc -l)
            ;;
        'callbacks.ncallbacks')
            value=$(python vol.py -f Challenge.raw windows.callbacks.SvcScan | tail -n +5 | wc -l)
            ;;
        *)
            echo "Command for parameter $param is not implemented."
            ;;
    esac

    # Write parameter and value to the output file
    echo "$param: $value" >> "$output_file"
done
